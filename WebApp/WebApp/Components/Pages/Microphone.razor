@page "/microphone"

<ThemeRefresher />

<div style="display:flex;justify-content:center;flex-direction:column">
    <div style="display:flex; justify-content:center">
        <h3 style="display:block">@_localizer[nameof(Resource.Microphone)]</h3>
        <button style="display:block" class="btn btn-wlasny" id="startButton">@_localizer[nameof(Resource.Start)]</button>
    </div>

    <canvas id="visualizer"></canvas>
</div>

<script>
    document.getElementById('startButton').onclick = function () {
        document.getElementById('startButton').remove();
        navigator.mediaDevices.getUserMedia({ audio: true })
            .then(function (stream) {
                console.log('Dostęp do mikrofonu udzielony.');

                const audioContext = new (window.AudioContext || window.webkitAudioContext)();
                const source = audioContext.createMediaStreamSource(stream);
                const analyser = audioContext.createAnalyser();

                source.connect(analyser);
                analyser.connect(audioContext.destination);

                analyser.fftSize = 2048;
                const bufferLength = analyser.frequencyBinCount;
                const dataArray = new Uint8Array(bufferLength);

                const canvas = document.getElementById('visualizer');
                const canvasContext = canvas.getContext('2d');

                function draw() {
                    analyser.getByteFrequencyData(dataArray);

                    canvasContext.clearRect(0, 0, canvas.width, canvas.height);

                    const barWidth = (canvas.width / bufferLength);
                    let barHeight;
                    let x = 0;

                    for (let i = 0; i < bufferLength; i++) {
                        barHeight = dataArray[i] / 2;

                        canvasContext.fillStyle = 'rgb(' + (barHeight + 100) + ',50,50)';
                        canvasContext.fillRect(x, canvas.height - barHeight, barWidth, barHeight);

                        x += barWidth + 1;
                    }

                    requestAnimationFrame(draw);
                }

                draw();
            })
            .catch(function (error) {
                console.log('Błąd podczas uzyskiwania dostępu do mikrofonu: ', error);
            });
    };
</script>

@code {

}
